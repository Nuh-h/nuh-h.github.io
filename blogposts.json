{
	"name":"Blog posts maintained by Nuh",
	"posts":[
		{
			"date":"04/01/2021",
			"title":"First post",
			"content":"This first post is about the (re)launch of this website. While this particular site has been host to a few other drafts before this rebuild, the expectation from now on is that the face of this website will continue to change in relation to the tech used to build it - as my skills and experience grow - but will remain with the goals expressed thus far (to myself). The goal is to host interesting things that I learn which will be helpful to someone out there. There is no intention to discuss or present anything else here. "
		},
		{
			"date":"08/01/2021",
			"title":"My first lesson after this launch",
			"content":"Straight after (re)launching this site, my next goal was to make use of a book I recently got a hold of - on MERN  (MongoDB, Express, React & Node) stack. I wanted to take the next step towards exploring backend, but I also heavily felt like I was neglecting my strong interest in C# and Dotnet development. I have a book on ASP.NET Core but the book was too abstract so I stalled in reading it. Thankfully, I had a conversation with a dotnet developer that pretty much freed me from having to choose between the two books to study. What he said was something along the lines 'ASP.NET development requires knowledge of frameworks like React', so I could just learn them together. As such I have been busy learning ASP.NET Core web development for the past few days - learning about Razor, APIs and MVC. This is one of the reasons why I think having mentors is very important. When you become confused and disillusioned, they can shine a light on an appropriate path for you, and you become excited again. I have yet to fully begin on the two books but I am doing some necessary preparations first to ensure I gain the best from the books. \n Moving onto the actual point of this post, what did I learn? That there's a world of wonder at the feet of ASP.NET Core. I was worried about how I will update this website. But having now seen how APIs are at play in many websites or services over the internet, I now have an idea on how I can update the blog posts on here without having to touch the website's structure at all. I am thinking of building an ASP.NET Core version of this website, this webpage in particular, and use APIs to handle updating the blog posts. With that, I don't have to see this site at all; just a Postman(or equivalent) HTTP Post/Put (with authentication as admin) will suffice to update it."
		}
	]
}